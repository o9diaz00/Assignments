#! /bin/bash

######################################################################################
# Error Checking => Exit if:
## There is no wp-config.php file found within the same directory the script is ran
## If you attempted to add a user that already exists within the table
##  --Changed so that it loops until you have an accepted value for user & password
######################################################################################

# Color variables
color_red="\e[31m";
color_green="\e[32m";
color_yellow="\e[33m";
color_white="\e[37m";
color_cyan="\e[36m";
color_purple="\e[35m";

echo -e "$color_purple      WordPress Admin User Creator";

# Check if wp-config.php file exists in the current directory
# If it does, grab the database name from the file
# Create a database dump called "$database.sql" in the directory: "$pwd/.hd/$database/", if possible

if [[ -f wp-config.php ]]; then
	database=$(grep "DB_NAME" wp-config.php | head -1 | cut -d"'" -f4);
	echo -en "$color_white\n Do you want to create a backup of this database ( any input other than y or Y will NOT create a dump )? ";
	read input;
	if [[ $input == 'y' || $input == 'Y' ]]; then
		mkdir -p ./.hd/$database 2> /dev/null;
		(mysqldump $database > ./.hd/$database/$database.sql) 2> /dev/null;
		if [[ "$?" -eq 0 ]]; then
	        	echo -e "$color_red\n Created database backup at $(pwd)/.hd/$database/$database.sql\n$color_white";
		else
			echo -e "$color_red\n Attempt to dump database FAILED!  You may want to cancel and investigate why\n$color_white"
		fi
	else
		echo -e "$color_white\n Skipping database dump...\n";
	fi
	
	# Kind of important variables here:
	prefix=$(grep "_prefix" wp-config.php | awk '{print $3}' | tr -d ";'\r\"");
	site=$(mysql $database -NBe "SELECT option_value FROM ${prefix}options WHERE option_name='siteURL';");
	ID=$(mysql $database -NBe "SELECT MAX(ID) from ${prefix}users;");
	[[ $ID == NULL ]] && ID=1 || ID=$((ID+1));

	echo -e "$color_green ======================================="
	echo -e "$color_cyan Site: $color_yellow $site\n$color_cyan Database: $color_yellow $database $color_white";
        echo -e "$color_green =======================================$color_white"
else
	echo -e "$color_red\nThere is no wp-config.php file in this directory!$color_white\n";
	exit;
fi

# Begins the user input-checking for credentials
user="";
while [[ "$user" == "" || "$password" == "" ]]; do
    echo -ne "\n$color_cyan Please enter a username: $color_white";
    read user;
    echo -ne "$color_cyan Please enter a password: $color_white";
    read password;
    if [[ "$user" == "" ]]; then
        echo -e "$color_red\n Sorry but you cannot have a blank username!$color_white";
    fi
    if [[ "$password" == "" ]]; then
        echo -e "$color_red\n Sorry but you cannot have a blank password!$color_white";
    fi
    if [[ $(mysql $database -NBe "SELECT user_login FROM ${prefix}users WHERE user_login LIKE '$user'") ]]; then
        echo -e "$color_red\n Sorry but this user already exists!$color_white";
        user="";
    fi
done;

# Inserting the content into the users table to create the user
mysql $database -e "INSERT INTO ${prefix}users (ID,user_login,user_pass,user_registered,display_name) VALUES ($ID,'$user',md5('$password'),'$(date +%F\ +%T)','$user');"

# Inserting the metadata to transform said user into a super-user
metaID=$(mysql $database -NBe "SELECT MAX(umeta_id) FROM ${prefix}usermeta;");
[[ $metaID == NULL ]] && metaID=1 || metaID=$((metaID+1));
mysql $database -e "INSERT into ${prefix}usermeta (umeta_id,user_id,meta_key,meta_value) VALUES ($metaID,$ID,'nickname','$user');"
metaID=$((metaID+1));
mysql $database -e "INSERT into ${prefix}usermeta (umeta_id,user_id,meta_key,meta_value) VALUES ($metaID,$ID,'${prefix}user_level',10);"
metaID=$((metaID+1));
capabilities='a:1:{s:13:"administrator";b:1;}';
mysql $database -e "INSERT into ${prefix}usermeta (umeta_id,user_id,meta_key,meta_value) VALUES ($metaID,$ID,'${prefix}capabilities','$capabilities');";

# Conclusion output and cleanup
echo -e "\n$color_purple New Administrative User Successfully Created. Try to use the following credentials:\n$color_green ====================================";
echo -e "$color_cyan SiteURL: $color_yellow $site/wp-admin\n$color_cyan Username: $color_yellow $user\n$color_cyan Password: $color_yellow "$password"\n$color_green ====================================\n$color_white";
echo -e "$color_red DON'T FORGET TO DELETE THE USER WHEN YOU'RE DONE!";
echo -e " =======================================$color_white";
echo -e "$color_yellow mysql $database -ve \"DELETE FROM ${prefix}usermeta WHERE user_id=$ID;\"\n mysql $database -ve \"DELETE FROM ${prefix}users WHERE ID=$ID;\"";
echo -e "\n If you want a one-liner >>>> mysql $database -ve \"DELETE FROM ${prefix}usermeta WHERE user_id=$ID; DELETE FROM ${prefix}users WHERE ID=$ID;\"";
echo -e "$color_red =======================================\n$color_white";
